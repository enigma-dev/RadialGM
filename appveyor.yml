# don't build "feature" branches
skip_branch_with_pr: true
branches:
  # whitelist
  only:
    - master
# only merge should increment build number
pull_requests:
  do_not_increment_build_number: true


# Build worker image (VM template)
image: Visual Studio 2019

# since we're pushing releases we don't want infinite recursion
# because the release pushes a tag, hence we aren't building on tags
skip_tags: true

platform:
  - x86
  - x64

configuration:
  - MinGW-Debug
  - MinGW-Release
  - MSVC-Debug
  - MSVC-Release

environment:
  VCPKG_DIR: C:\tools\vcpkg
  TRIPLET_NAME: $(PLATFORM)-windows-static
  BUILD_TYPE: Debug
  GENERATOR: "Visual Studio 16 2019"

init:
  - ps: |
     if ($Env:CONFIGURATION -contains "MSVC*") {
       call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat" %PLATFORM%
       $Env:GENERATOR = "Visual Studio 15 2017"
       $Env:CMAKE_ARGS = -DVCPKG_TARGET_TRIPLET=%TRIPLET_NAME% -DCMAKE_TOOLCHAIN_FILE="%VCPKG_DIR%\scripts\buildsystems\vcpkg.cmake"

       if ($PLATFORM -eq "x64") {
         $Env:CMAKE_ARGS += "-A x64"
       } else {
         $Env:CMAKE_ARGS += "-A Win32"
       }
       
       if ($CONFIGURATION -contains "*Release*") {
         $Env:BUILD_TYPE = MinSizeRel
       }
     }

install:
  - git submodule update --init --recursive
  - ps: |
      if ($Env:$CONFIGURATION -contains "MSVC*") {
        # this gets the latest release of RadialGM-deps using GitHub API
        $apiURL = "https://api.github.com/repos/enigma-dev/radialgm-deps/releases/latest"
        $latest = Invoke-RestMethod -Method Get -Uri $apiURL
        # find the asset whose name matches the architecture of this build
        $depsName = "rgmdeps-$env:platform.zip"
        foreach ($asset in $latest.assets) {
          Write-Host $asset.name
          if ($asset.name -eq $depsName) {
            $depsURL = $asset.browser_download_url
            break
          }
        }
        Write-Host $depsURL

        # download and extract the deps matching this job's architecture
        appveyor DownloadFile $depsURL -FileName $depsName
        7z x -mmt $depsName -oC:\tools\vcpkg
      } else {
        if ($Env:$PLATFORM -eq "x64") {
          $arch = 64
          $pkg_arch = x
        } else {
          $arch = 32
          $pkg_arch = i
        }
        $Env:GENERATOR = "MSYS Makefiles"
        $Env:PATH = "C:\msys64;C:\msys64\mingw$arch\bin;C:\msys64\usr\local\bin;C:\msys64\usr\bin;$Env:Path"
        bash -lc "pacboy --noconfirm -S boost:$pkg_arch pugixml:$pkg_arch rapidjson:$pkg_arch yaml-cpp:$pkg_arch grpc:$pkg_arch protobuf:$pkg_arch glm:$pkg_arch libpng:$pkg_arch qt5:$pkg_arch qscintilla:$pkg_arch"
        Exit
      }

build_script:
  - mkdir build && cd build
  - cmake -G "%GENERATOR%" %CMAKE_ARGS% -DCMAKE_BUILD_TYPE="%BUILD_TYPE%" ..
  - cmake --build . --config "%BUILD_TYPE%"
  - cmake --install .
  - 7z a RadialGM-%CONFIGURATION%-%PLATFORM%.zip ./Submodules/enigma-dev
  - appveyor PushArtifact RadialGM-%CONFIGURATION%-%PLATFORM%.zip -FileName RadialGM-%CONFIGURATION%-%PLATFORM%.zip -DeploymentName RadialGM

deploy:
  release: RadialGM-v$(appveyor_build_version)
  provider: GitHub
  auth_token:
    secure: 0dfPI8cYNeLks0iLSmTyzrI/H0K3CfMrBsvfslzZp66w5gqg8pqSf4Edhovsox9k
  artifact: RadialGM
  draft: false
  prerelease: false
  on:
    branch: master
